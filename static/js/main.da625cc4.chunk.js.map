{"version":3,"sources":["My Components/Header.js","My Components/Todoitems.js","My Components/Todos.js","My Components/Footer.js","My Components/Addtodo.js","My Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["header","props","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","searchbar","placeholder","defaultProps","Prototype","PropTypes","string","bool","isRequired","Todoitems","todo","onDelete","desc","onClick","Todos","todos","length","class","role","map","sno","Footer","style","position","top","width","Addtodo","useState","setTitle","setDesc","onSubmit","e","preventDefault","addTodo","alert","htmlFor","value","onChange","target","required","autoFocus","aria-describedby","change","About","height","App","inittodo","localStorage","getItem","JSON","parse","console","log","setTodos","filter","setItem","stringify","naam","second_naam","document","querySelector","innerText","mytodo","useEffect","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da625cc4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n// us props to import stuff from app\r\n// if you want to import stuff in direct form then use {} to store imported stuff \r\nexport default function header(props) {\r\n    return (\r\n       \r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Link</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">about</a>\r\n              </li>\r\n             \r\n          </ul>\r\n              {props.searchbar? <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n              </form>: \"\"}\r\n        </div>\r\n          </div>\r\n    </nav>\r\n    \r\n    )\r\n}\r\n\r\n// use this if you have not assigned the title or any other atributes\r\nheader.defaultProps = {\r\n  title: \" me me me me me me\",\r\n  searchbar: true\r\n}\r\n\r\n\r\n\r\n// don't type integer value in proptypes if you have assgined as string\r\nheader.Prototype = {\r\n      title: PropTypes.string,\r\n      searchbar: PropTypes.bool.isRequired\r\n    }\r\n","import React from 'react'\r\n\r\n// we will recieve the todos variable that we have pass from the Todos \r\nexport const Todoitems = ({todo, onDelete}) => {\r\n    return (\r\n        <div className=\"scroll-y\">\r\n            <h4>{todo.title}</h4>\r\n            <p>{todo.desc}</p>\r\n\r\n{/* use arrow function to execute the function defined in app.js  on command otherwise it will execute on rendering */}\r\n            <button className=\"btn btn-sm btn-outline-dark\" onClick={()=>{onDelete(todo)}}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Todoitems } from \"./Todoitems\";\r\n\r\n// recieve the variable that we have pass from the app.js\r\nexport const Todos = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\"text-center my-3\">Todos list</h3>\r\n\r\n            {/* important */}\r\n\r\n            {/* use a new variable to pass the the todo that we recive in props */}\r\n            {/* carefull with the varaible name */}\r\n            {/* here \"\"\"\"\"todos\"\"\"\"\" is the variable that we have created  which will pass in Todoitems and todo id the name that we have recievd in props */}\r\n\r\n            {/* this function takes todo as input */}\r\n            {props.todos.length === 0 ? <div className=\"notodo\">\r\n                \r\n                <div class=\"alert alert-dark\" role=\"alert\">\r\n                    Write your first Todo Now!!!!!!!!!!!!!!!!!\r\n                </div>\r\n            </div> :\r\n                props.todos.map((todo) => {\r\n                    // if you want to return more than one thing then use \r\n                    return (<> <Todoitems todo={todo} key={todo.sno} onDelete={props.onDelete} /> <hr /> </>)\r\n                    // now in brackets return more than one thing with \r\n                })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    // to add style in react\r\n    let footerstyle={\r\n        position: \"relative\",\r\n        top: \"35vh\",\r\n        width: \"100%\",\r\n    }\r\n    return (\r\n        <footer className=\"bg-dark text-light py-1\" style={footerstyle}>\r\n            <p className=\"text-center\">Copyright &copy; MyTodoList.com owns and control byMyBook.inc</p>\r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\n\r\n\r\nexport const Addtodo = (props) => {\r\n    // it means that weâ€™re making two new variables title and setTitle, where title is set to the first value returned by useState, and setTitle is the second. It is equivalent to this code:\r\n    const [title, setTitle] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n\r\n    const submit = (e) => {\r\n        // it will not refresh the page when we submit the form\r\n        e.preventDefault();\r\n        // if and else condition\r\n        if (!title || !desc) {\r\n            alert(\"you can not add empty Todo\")\r\n        }\r\n        else {\r\n            props.addTodo(title, desc);\r\n            setTitle(\"\");\r\n            setDesc(\"\")\r\n        }\r\n    }\r\n    return (\r\n        // how to take the input in react using forms \r\n        <div className=\"container my-3\">\r\n            <h3>Add a Todo</h3>\r\n            <form onSubmit={submit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"todo_title\" className=\"form-label\">Todo Title</label>\r\n                    <input type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value) }} required autoFocus className=\"form-control\" id=\"todo_title\" aria-describedby=\"emailHelp\" />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"todo_desc\" className=\"form-label\">Todo Decsription</label>\r\n                    <input type=\"text\" value={desc} onChange={(e) => { setDesc(e.target.value) }} required className=\"form-control\" id=\"todo_desc\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-outline-dark fjsdlkjfl45543532\" onClick={() => { props.change('Submititng', 'Submit') }} >Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const About = () => {\r\n    let merastyle={\r\n        height:\"32vh\"\r\n    }\r\n    return (\r\n        <>\r\n        <div>\r\n            this is an about page\r\n            <p>React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes.Declarative views make your code more predictable and easier to debug.</p>\r\n\r\n            <h1>this is me</h1>\r\n        </div>\r\n        <div style={merastyle}></div>\r\n        </>\r\n    )\r\n}\r\n","// your todos will not leave this computer because it is stored in your local storage\n// so no login is required\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Header from \"./My Components/Header\";\nimport { Todos } from \"./My Components/Todos\";\nimport { Footer } from \"./My Components/Footer\";\nimport { Addtodo } from \"./My Components/Addtodo\";\nimport { About } from \"./My Components/About\";\n\n// router is use to losd another page without reloading\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// it does not import file name it imports from file name \n// from fle it import export const name\n\nfunction App() {\n  let inittodo;\n  if (localStorage.getItem(\"todos\") === null) {\n    inittodo = [];\n  }\n  else {\n    inittodo = JSON.parse(localStorage.getItem(\"todos\"))\n  }\n\n\n  const onDelete = (todo) => {\n    console.log('i am on delete', todo);\n    setTodos(todos.filter((e) => {\n      return e !== todo;\n    }));\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n  const change = (naam, second_naam) => {\n    document.querySelector('.fjsdlkjfl45543532').innerText = naam\n    document.querySelector('.fjsdlkjfl45543532').innerText = second_naam\n  }\n\n\n  // how to tke input and manipulate it\n  const addTodo = (title, desc) => {\n    // if there is no todos then there will be an error in assigning sno\n    let sno;\n    if (todos.length === 0) {\n      sno = 0\n    } else {\n      let sno = todos[todos.length - 1].sno + 1;\n    }\n\n    const mytodo = {\n      sno: sno,\n      title: title,\n      desc: desc\n    }\n    // maybe it will not work because maybe when localStorage will set items it has not able to reach the set todos to permanently set todo\n    // after adding todos if the user refresh his todos will be gone\n    setTodos([...todos, mytodo]);\n    // so in order to save todos we will store it in his local storage\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n    // JSON.stringify() will convert the todos in string \n  }\n\n\n  // create a variable \n  const [todos, setTodos] = useState(inittodo);\n  // it will work when todos will change \n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos])\n  return (\n    <>\n      <Router>\n        <Header title=\"My todos list\" searchbar={true} />\n        {/* we want header always so it is outside the switch  */}\n\n        <Switch>\n          {/* react reads the path from the start and if one character maches then it will render it */}\n          {/* so in order to avoid this mixup we use exact character to readirect the user in exact path */}\n          <Route exact path=\"/\" render={() => {\n            return (\n            <>\n            <Addtodo change={change} addTodo={addTodo} />\n            {/* pass the variable that we have made above */ }\n            <Todos todos={todos} onDelete={onDelete} />\n            </>\n            )\n          }}>\n            </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          \n          \n        </Switch>\n        {/* we want footer always so it is outside the switch  */}\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}